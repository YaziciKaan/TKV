gt_labels = read_labels(data_path, (image_height, image_width))
pred_labels = read_labels(pred_path, (image_height, image_width))

gt_mask = mask_from_labels(gt_labels, (image_height, image_width))
pred_mask = mask_from_labels(pred_labels, (image_height, image_width))

iou_score = calculate_iou(gt_mask, pred_mask)

# Ground-Truth'ları imgeye çiz
for label in gt_labels:
    points = label['points']
    cv2.polylines(image, [points], isClosed=True, color=(0, 255, 0), thickness=2)
    cv2.fillPoly(image, [points], color=(0,255,0))

# Tahmin edilen bölgeleri imge üzerine çiz
for label in pred_labels:
    points = label['points']
    cv2.polylines(image, [points], isClosed=True, color=(0, 0, 255), thickness=2)
    cv2.fillPoly(image, [points], color=(0,0,255))

# Sonucu kaydetmek için bir dizin oluştur
output_folder = data_folder.replace('data/test/images', 'data/outputs/')
output_image_path = os.path.join(output_folder, f"{unique_id}.jpg")